/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void sumPath(TreeNode* root, int currentSum, int targetSum, vector<int> path, vector<vector<int>> &ans) {
        if(root == NULL)
            return;
            
        currentSum += root->val;
        
        path.push_back(root->val);
        
        if(root->left == NULL && root->right == NULL && currentSum == targetSum)
            ans.push_back(path);
                
        sumPath(root->left, currentSum, targetSum, path, ans);
        sumPath(root->right, currentSum, targetSum, path, ans);
        
        path.pop_back();
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
        vector<vector<int>> ans;
        vector<int> path;
        
        int currentSum = 0;
        
        sumPath(root, currentSum, targetSum, path, ans);
        return ans;
    }
};
