/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int c = 0;
        
        ListNode* head = new ListNode();
        ListNode* temp = head;
        
        while(l1 != NULL || l2 != NULL) {
            int t;
            
            if(l1 != NULL && l2 != NULL) t = l1->val + l2->val + c;
            else if(l1 == NULL && l2 != NULL) t = l2->val + c;
            else if(l1 != NULL && l2 == NULL) t = l1->val + c;
            
            ListNode* newNode = new ListNode(t % 10);
            temp->next = newNode;
            temp = temp->next;
            
            c = t / 10;
            
            if(l1 != NULL) l1 = l1->next;
            if(l2 != NULL) l2 = l2->next;
        }
        
        while(c > 0){
            ListNode* newNode = new ListNode(c%10);
            temp->next = newNode;
            temp = temp->next;
            c/=10;
        }
        
        return head->next;
    }
};
