/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void visitedData(TreeNode* root, map<int, int> &values, int &mx) {
        if(root == NULL) {
            return;
        }

        visitedData(root->left, values, mx);
        values[root->val]++;
        mx = max(mx, values[root->val]);
        visitedData(root->right, values, mx);
    }
    
    vector<int> findMode(TreeNode* root) {
        map<int, int> values;
        int mx = INT_MIN;

        visitedData(root, values, mx);

        vector<int> modes;
        for(auto it: values) {
            if(it.second == mx) {
                modes.push_back(it.first);
            }
        }

        return modes;
    }
};
