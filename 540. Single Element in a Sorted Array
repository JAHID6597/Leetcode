class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        if(nums.size() == 1 || nums[0] != nums[1]) {
            return nums[0];
        }

        int start = 0, end = nums.size() - 1;

        if(nums[end] != nums[end - 1]) {
            return nums[end];
        }

        while(start <= end) {
            int mid = start + (end - start) / 2;

            if(nums[mid] != nums[mid + 1] && nums[mid] != nums[mid - 1]) {
                return nums[mid];
            }

            int leftSubArraySize = nums[mid - 1] == nums[mid] ? mid - 1 : mid;

            if(leftSubArraySize % 2) {
                end = mid - 1;
            } else {
                start = mid + 1;
            }
        }

        return nums[end];
    }
};
