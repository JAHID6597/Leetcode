class Solution {
public:
    string removeDuplicates(string s, int k) {
        stack< pair<char, int> > vis;

        for(int i = 0; i < s.size(); i++) {
            if(vis.empty()) {
                vis.push({s[i], 1});
            } else {
                pair<char, int> top = vis.top();

                if(top.first == s[i]) {
                    if(top.second == k) {
                        vis.pop();
                        vis.push({s[i], 1});
                    } else if(top.second + 1 == k) {
                        vis.pop();
                    } else {
                        vis.pop();
                        vis.push({s[i], top.second + 1});
                    }
                } else {
                    vis.push({s[i], 1});
                }
            }
        }

        string ans = "";
        while(!vis.empty()) {
            pair<char, int> top = vis.top();
            while(top.second--) {
                ans += top.first;
            }
            vis.pop();
        }

        reverse(ans.begin(), ans.end());
        
        return ans;
    }
};
